# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
      - stag
  pull_request:
    branches:
      - main
      - dev
      - stag

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run lint
    - run: npm install prettier
    - run: npm run prettier
    - run: CI=true npm run test
    - run: npm run build
    - run: ls -al
    - uses: actions/upload-artifact@v3
      with:
        name: buildfolder
        path: build/

  deploy:
    needs: build
    name: "Deploy To AWS ENV"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init
       
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - run: echo EC2ADDR=$(terraform output publicaddr) >> $GITHUB_ENV
      - run: echo ${{ env.EC2ADDR }}

      - uses: actions/download-artifact@v3
        with:
          name: buildfolder
          path: builddown/

      - name: Sleep 20secs
        run: sleep 20s
        shell: bash

      - name: Deploy Application to AWS
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SOURCE: "builddown/"
          REMOTE_HOST: ${{ env.EC2ADDR }}
          REMOTE_USER: "ubuntu"
          TARGET: "/var/www/html/"
